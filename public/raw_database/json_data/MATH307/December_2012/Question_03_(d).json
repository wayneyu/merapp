{
    "answer_html": "<p><code>&#160;&#160;&#160;x&#160;=&#160;P*[0;&#160;1;&#160;0]</code></p>\n", 
    "answer_latex": "\\texttt{~~~x~=~P*{[}0;~1;~0{]}}", 
    "contributors": [
        "Konradbe"
    ], 
    "course": "MATH307", 
    "flags": [
        "QGQ", 
        "RH", 
        "RS", 
        "RT"
    ], 
    "hints_html": [
        "<p>The matrix <em>P</em> that projects onto the range of <em>B</em> is given by <em>P = B(B<sup>T</sup>B)<sup>-1</sup>B<sup>T</sup></em>.</p>\n"
    ], 
    "hints_latex": [
        "The matrix \\emph{P} that projects onto the range of \\emph{B} is given by\n\\emph{P =\nB(B\\textsuperscript{T}B)\\textsuperscript{-1}B\\textsuperscript{T}}."
    ], 
    "hints_raw": [
        "The matrix ''P'' that projects onto the range of ''B'' is given by ''P = B(B&lt;sup>T&lt;/sup>B)&lt;sup>-1&lt;/sup>B&lt;sup>T&lt;/sup>''.\n"
    ], 
    "num_votes": 0, 
    "question": "3 (d)", 
    "rating": null, 
    "sols_html": [
        "<p>To begin with, we define the matrix <em>B</em> using the result from part (c):</p>\n<p><code>&#160;&#160;&#160;B&#160;=&#160;[-1&#160;-1;&#160;1&#160;0;&#160;0&#160;1];</code></p>\n<p>Then, use the formula for the projection matrix to define <em>P</em>:</p>\n<p><code>&#160;&#160;&#160;P&#160;=&#160;B*inv(B&#8217;*B)*B&#8217;;</code></p>\n<p>This solves (i). Note that all possible choices of <em>B</em> would have resulted in the same projection matrix <em>P</em>. Finally, the vector <em>x</em> in <em>S</em> closest to <em><span>[</span>0, 1, 0<span>]</span><sup>T</sup></em> is the projection of that vector onto <em>S</em>, that is:</p>\n<p><code>&#160;&#160;&#160;x&#160;=&#160;P*[0;&#160;1;&#160;0]</code></p>\n"
    ], 
    "sols_latex": [
        "To begin with, we define the matrix \\emph{B} using the result from part\n(c):\n\n\\texttt{~~~B~=~{[}-1~-1;~1~0;~0~1{]};}\n\nThen, use the formula for the projection matrix to define \\emph{P}:\n\n\\texttt{~~~P~=~B*inv(B'*B)*B';}\n\nThis solves (i). Note that all possible choices of \\emph{B} would have\nresulted in the same projection matrix \\emph{P}. Finally, the vector\n\\emph{x} in \\emph{S} closest to \\emph{{[}0, 1, 0{]}\\textsuperscript{T}}\nis the projection of that vector onto \\emph{S}, that is:\n\n\\texttt{~~~x~=~P*{[}0;~1;~0{]}}"
    ], 
    "sols_raw": [
        "To begin with, we define the matrix ''B'' using the result from part (c):\n    B = [-1 -1; 1 0; 0 1];\n\nThen, use the formula for the projection matrix to define ''P'':\n    P = B*inv(B'*B)*B';\n\nThis solves (i). Note that all possible choices of ''B'' would have resulted in the same projection matrix ''P''. Finally, the vector ''x'' in ''S'' closest to ''[0, 1, 0]&lt;sup>T&lt;/sup>'' is the projection of that vector onto ''S'', that is:\n    x = P*[0; 1; 0]\n"
    ], 
    "solvers": [
        "CarmenBruni"
    ], 
    "statement_html": "<p>Let</p>\n<p><span class=\"math\">\\[\\begin{aligned}\nS = \\left\\{[x_1, x_2, x_3]^T:\\, x_1 + x_2 + x_3 = 0\\right\\}\\end{aligned}\\]</span></p>\n<p>be the subspace of vectors in <span class=\"math\">\\(\\mathbb R^3\\)</span> whose components sum to zero.</p>\n<p><strong>(d)</strong> Write down the MATLAB/Octave code that</p>\n<p>(i) computes the projection matrix <em>P</em> that projects onto <em>S</em> and</p>\n<p>(ii) computes the vector in <em>S</em> that is closest to <em><span>[</span>0, 1, 0<span>]</span><sup>T</sup></em>.</p>\n", 
    "statement_latex": "Let\n\n\\begin{align*}\nS = \\left\\{[x_1, x_2, x_3]^T:\\, x_1 + x_2 + x_3 = 0\\right\\}\n\\end{align*}\n\nbe the subspace of vectors in $\\mathbb R^3$ whose components sum to\nzero.\n\n\\textbf{(d)} Write down the MATLAB/Octave code that\n\n(i) computes the projection matrix \\emph{P} that projects onto \\emph{S}\nand\n\n(ii) computes the vector in \\emph{S} that is closest to \\emph{{[}0, 1,\n0{]}\\textsuperscript{T}}.", 
    "statement_raw": "Let\n\n:&lt;math>\nS = \\left\\{[x_1, x_2, x_3]^T:\\, x_1 + x_2 + x_3 = 0\\right\\}\n&lt;/math>\n\nbe the subspace of vectors in &lt;math>\\mathbb R^3&lt;/math> whose components sum to zero.\n\n'''(d)''' Write down the MATLAB/Octave code that\n\n(i) computes the projection matrix ''P'' that projects onto ''S'' and\n\n(ii) computes the vector in ''S'' that is closest to ''[0, 1, 0]&lt;sup>T&lt;/sup>''.\n", 
    "term": "December", 
    "topics": [
        "MATLAB", 
        "Orthogonal_projection"
    ], 
    "url": "http://wiki.ubc.ca/Science:Math_Exam_Resources/Courses/MATH307/December_2012/Question_03_(d)", 
    "year": 2012
}