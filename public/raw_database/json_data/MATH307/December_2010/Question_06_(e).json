{
    "answer_html": "<p>The amplitudes are therefore most accurate for frequencies <span class=\"math\">\\(0\\leq{}n&lt;\\frac{N}{2}\\)</span>.</p>\n", 
    "answer_latex": "The amplitudes are therefore most accurate for frequencies\n$0\\leq{}n<\\frac{N}{2}$.", 
    "contributors": [
        "CarmenBruni", 
        "IainMoyles"
    ], 
    "course": "MATH307", 
    "flags": [
        "QGQ", 
        "QGH", 
        "QGS", 
        "QGT"
    ], 
    "hints_html": [
        "<p><em>fft</em> in Matlab produces the discrete Fourier coefficients. How can we relate these to the exact Fourier coefficients? How does the period of discrete Fourier transform coefficients affect the accuracy of what you get?</p>\n", 
        "<p>Recall that the Discrete Fourier Transform coefficients <span class=\"math\">\\(\\tilde{c}_n\\)</span> of a function <span class=\"math\">\\(f(x)\\)</span> are defined as</p>\n<p><span class=\"math\">\\[\\begin{aligned}\n\\tilde{c}_n=\\sum_{n=0}^{N-1}e^{-2\\pi{}in x_j}f_j\\end{aligned}\\]</span></p>\n<p>where <span class=\"math\">\\(N\\)</span> are the total number of discrete points taken on a spatial interval <span class=\"math\">\\([0,L]\\)</span>, <span class=\"math\">\\(x_j = j/N\\)</span> and <span class=\"math\">\\(f_j=f(x_j)=f\\left(\\frac{j}{N}\\right)\\)</span>.</p>\n", 
        "<p>Use a Riemann approximation of the integral expression of the Fourier coefficients <span class=\"math\">\\(c_n\\)</span> from <span>part (a)</span>.</p>\n"
    ], 
    "hints_latex": [
        "\\emph{fft} in Matlab produces the discrete Fourier coefficients. How can\nwe relate these to the exact Fourier coefficients? How does the period\nof discrete Fourier transform coefficients affect the accuracy of what\nyou get?", 
        "Recall that the Discrete Fourier Transform coefficients $\\tilde{c}_n$ of\na function $f(x)$ are defined as\n\n\\begin{align*}\n\\tilde{c}_n=\\sum_{n=0}^{N-1}e^{-2\\pi{}in x_j}f_j\n\\end{align*}\n\nwhere $N$ are the total number of discrete points taken on a spatial\ninterval $[0,L]$, $x_j = j/N$ and\n$f_j=f(x_j)=f\\left(\\frac{j}{N}\\right)$.", 
        "Use a Riemann approximation of the integral expression of the Fourier\ncoefficients $c_n$ from\n{part\n(a)}."
    ], 
    "hints_raw": [
        "''fft'' in Matlab produces the discrete Fourier coefficients.  How can we relate these to the exact Fourier coefficients?  How does the period of discrete Fourier transform coefficients affect the accuracy of what you get?\n", 
        "Recall that the Discrete Fourier Transform coefficients &lt;math>\\tilde{c}_n&lt;/math> of a function &lt;math>f(x)&lt;/math> are defined as\n\n:&lt;math>\n\\tilde{c}_n=\\sum_{n=0}^{N-1}e^{-2\\pi{}in x_j}f_j\n&lt;/math>\n\nwhere &lt;math>N&lt;/math> are the total number of discrete points taken on a spatial interval &lt;math>[0,L]&lt;/math>, &lt;math> x_j = j/N&lt;/math> and &lt;math>f_j=f(x_j)=f\\left(\\frac{j}{N}\\right)&lt;/math>.\n", 
        "Use a Riemann approximation of the integral expression of the Fourier coefficients &lt;math>c_n&lt;/math> from [[Science:Math_Exam_Resources/Courses/MATH307/December_2010/Question_06_(a)|part (a)]].\n"
    ], 
    "num_votes": 0, 
    "question": "6 (e)", 
    "rating": null, 
    "sols_html": [
        "<p>The true Fourier coefficients as in <span>part (a)</span> are given by</p>\n<p><span class=\"math\">\\[\\begin{aligned}\nc_n=\\int_0^1e^{-2\\pi{}inx}x\\textrm{d}x\\end{aligned}\\]</span></p>\n<p>which we can approximate with a left Riemann sum over N points to get</p>\n<p><span class=\"math\">\\[\\begin{aligned}\nc_n\\approx\\frac{1}{N}\\sum_{j=0}^{N-1}e^{-2\\pi{}in x_j}x_j\\end{aligned}\\]</span></p>\n<p>where <span class=\"math\">\\(x_j=\\frac{j}{N}\\)</span>. Compare this to the discrete Fourier transform coefficients defined by</p>\n<p><span class=\"math\">\\[\\begin{aligned}\n\\tilde{c}_n=\\sum_{j=0}^{N-1}e^{-2\\pi{}in x_j}x_j\\end{aligned}\\]</span></p>\n<p>and comparing the expressions we see that <span class=\"math\">\\(c_n\\approx\\frac{1}{N}\\tilde{c}_n\\)</span>. The discrete Fourier coefficients can be computed in Matlab using the command <em>fft</em>. Therefore, in Matlab, we need to sample <span class=\"math\">\\(x\\)</span> over say 100 points and use <em>fft</em>,</p>\n<p><code>&#160;&#160;&#160;N&#160;=&#160;100;</code><br /><code>&#160;&#160;&#160;x&#160;=&#160;linspace(0,1,N);</code><br /><code>&#160;&#160;&#160;C&#160;=&#160;fft(x);</code></p>\n<p>Since <span class=\"math\">\\(C =[\\tilde{c_0},\\tilde{c_1},\\tilde{c_2},...]\\)</span> are the discrete Fourier coefficients, then the actual Fourier coefficients are given by <span class=\"math\">\\(c_n\\approx\\frac{1}{N}\\tilde{c_n}\\)</span> (where in Matlab we arbitrarily chose that N=100).</p>\n<p>The discrete Fourier coefficients are periodic with period <span class=\"math\">\\(N\\)</span> and so frequencies <span class=\"math\">\\(\\displaystyle {}w_n\\)</span> and <span class=\"math\">\\(\\displaystyle {}w_n+N\\)</span> are indistinguishable. Particularly this means that modes <span class=\"math\">\\(-N/2\\leq{}n&lt;0\\)</span>, will be indistinguishable to modes <span class=\"math\">\\(\\displaystyle {}N/2&lt;n&lt;N\\)</span> since they differ by period <span class=\"math\">\\(N\\)</span>. These negative modes are relevant because they are the complex conjugates to modes <span class=\"math\">\\(0&lt;n\\leq{}N/2\\)</span> and will therefore have the same amplitudes meaning that if a mode on <span class=\"math\">\\(\\displaystyle {}1&lt;n&lt;N/2\\)</span> has a high amplitude then so too will its complex conjugate affecting the result on <span class=\"math\">\\(N/2\\leq{n}&lt;N\\)</span>. From <span>part (a)</span> we see that for the function <span class=\"math\">\\(f(x)=x\\)</span>, the amplitudes satisfied <span class=\"math\">\\(|c_n|=\\frac{1}{2\\pi{}n}\\)</span> and that the highest amplitudes are for integers closest to zero. Therefore, negative modes slightly less than zero have the opportunity to create the biggest errors on modes slightly greater than <span class=\"math\">\\(N/2\\)</span>. Conversely, the modes <span class=\"math\">\\(0\\leq{n}&lt;N/2\\)</span> will only be affected by modes smaller than <span class=\"math\">\\(-N/2\\)</span> which for functions that behave like <span class=\"math\">\\(f(x)=x\\)</span> will have small amplitudes on that region and thus create small errors. The amplitudes are therefore most accurate for frequencies <span class=\"math\">\\(0\\leq{}n&lt;\\frac{N}{2}\\)</span>.</p>\n"
    ], 
    "sols_latex": [
        "The true Fourier coefficients as in\n{part\n(a)} are given by\n\n\\begin{align*}\nc_n=\\int_0^1e^{-2\\pi{}inx}x\\textrm{d}x\n\\end{align*}\n\nwhich we can approximate with a left Riemann sum over N points to get\n\n\\begin{align*}\nc_n\\approx\\frac{1}{N}\\sum_{j=0}^{N-1}e^{-2\\pi{}in x_j}x_j\n\\end{align*}\n\nwhere $x_j=\\frac{j}{N}$. Compare this to the discrete Fourier transform\ncoefficients defined by\n\n\\begin{align*}\n\\tilde{c}_n=\\sum_{j=0}^{N-1}e^{-2\\pi{}in x_j}x_j\n\\end{align*}\n\nand comparing the expressions we see that\n$c_n\\approx\\frac{1}{N}\\tilde{c}_n$. The discrete Fourier coefficients\ncan be computed in Matlab using the command \\emph{fft}. Therefore, in\nMatlab, we need to sample $x$ over say 100 points and use \\emph{fft},\n\n\\texttt{~~~N~=~100;}\\\\\\texttt{~~~x~=~linspace(0,1,N);}\\\\\\texttt{~~~C~=~fft(x);}\n\nSince $C =[\\tilde{c_0},\\tilde{c_1},\\tilde{c_2},...]$ are the discrete\nFourier coefficients, then the actual Fourier coefficients are given by\n$c_n\\approx\\frac{1}{N}\\tilde{c_n}$ (where in Matlab we arbitrarily chose\nthat N=100).\n\nThe discrete Fourier coefficients are periodic with period $N$ and so\nfrequencies $\\displaystyle {}w_n$ and $\\displaystyle {}w_n+N$ are\nindistinguishable. Particularly this means that modes $-N/2\\leq{}n<0$,\nwill be indistinguishable to modes $\\displaystyle {}N/2<n<N$ since they\ndiffer by period $N$. These negative modes are relevant because they are\nthe complex conjugates to modes $0<n\\leq{}N/2$ and will therefore have\nthe same amplitudes meaning that if a mode on $\\displaystyle {}1<n<N/2$\nhas a high amplitude then so too will its complex conjugate affecting\nthe result on $N/2\\leq{n}<N$. From\n{part\n(a)} we see that for the function $f(x)=x$, the amplitudes satisfied\n$|c_n|=\\frac{1}{2\\pi{}n}$ and that the highest amplitudes are for\nintegers closest to zero. Therefore, negative modes slightly less than\nzero have the opportunity to create the biggest errors on modes slightly\ngreater than $N/2$. Conversely, the modes $0\\leq{n}<N/2$ will only be\naffected by modes smaller than $-N/2$ which for functions that behave\nlike $f(x)=x$ will have small amplitudes on that region and thus create\nsmall errors. The amplitudes are therefore most accurate for frequencies\n$0\\leq{}n<\\frac{N}{2}$."
    ], 
    "sols_raw": [
        "The true Fourier coefficients as in [[Science:Math_Exam_Resources/Courses/MATH307/December_2010/Question_06_(a)|part (a)]] are given by\n\n:&lt;math>\nc_n=\\int_0^1e^{-2\\pi{}inx}x\\textrm{d}x\n&lt;/math>\n\nwhich we can approximate with a left Riemann sum over N points to get\n\n:&lt;math>\nc_n\\approx\\frac{1}{N}\\sum_{j=0}^{N-1}e^{-2\\pi{}in x_j}x_j\n&lt;/math>\n\nwhere &lt;math>x_j=\\frac{j}{N}&lt;/math>.  Compare this to the discrete Fourier transform coefficients defined by\n\n:&lt;math>\n\\tilde{c}_n=\\sum_{j=0}^{N-1}e^{-2\\pi{}in x_j}x_j\n&lt;/math>\n\nand comparing the expressions we see that &lt;math>c_n\\approx\\frac{1}{N}\\tilde{c}_n&lt;/math>.  The discrete Fourier coefficients can be computed in Matlab using the command ''fft''.  Therefore, in Matlab, we need to sample &lt;math>x&lt;/math> over say 100 points and use ''fft'',\n\n    N = 100;\n    x = linspace(0,1,N);\n    C = fft(x);\n\nSince &lt;math>C =[\\tilde{c_0},\\tilde{c_1},\\tilde{c_2},...]&lt;/math> are the discrete Fourier coefficients, then the actual Fourier coefficients are given by &lt;math>c_n\\approx\\frac{1}{N}\\tilde{c_n}&lt;/math> (where in Matlab we arbitrarily chose that N=100).\n\nThe discrete Fourier coefficients are periodic with period &lt;math>N&lt;/math> and so frequencies &lt;math>\\displaystyle{}w_n&lt;/math> and &lt;math>\\displaystyle{}w_n+N&lt;/math> are indistinguishable.  Particularly this means that modes &lt;math>-N/2\\leq{}n&lt;0&lt;/math>, will be indistinguishable to modes &lt;math>\\displaystyle{}N/2&lt;n&lt;N&lt;/math> since they differ by period &lt;math>N&lt;/math>.  These negative modes are relevant because they are the complex conjugates to modes &lt;math>0&lt;n\\leq{}N/2&lt;/math> and will therefore have the same amplitudes meaning that if a mode on &lt;math>\\displaystyle{}1&lt;n&lt;N/2&lt;/math> has a high amplitude then so too will its complex conjugate affecting the result on &lt;math>N/2\\leq{n}&lt;N&lt;/math>.  From [[Science:Math_Exam_Resources/Courses/MATH307/December_2010/Question_06_(a)|part (a)]] we see that for the function &lt;math>f(x)=x&lt;/math>, the amplitudes satisfied &lt;math>|c_n|=\\frac{1}{2\\pi{}n}&lt;/math> and that the highest amplitudes are for integers closest to zero.  Therefore, negative modes slightly less than zero have the opportunity to create the biggest errors on modes slightly greater than &lt;math>N/2&lt;/math>.  Conversely, the modes &lt;math>0\\leq{n}&lt;N/2&lt;/math> will only be affected by modes smaller than &lt;math>-N/2&lt;/math> which for functions that behave like &lt;math>f(x)=x&lt;/math> will have small amplitudes on that region and thus create small errors.  The amplitudes are therefore most accurate for frequencies &lt;math>0\\leq{}n&lt;\\frac{N}{2}&lt;/math>.\n"
    ], 
    "solvers": [
        "Konradbe"
    ], 
    "statement_html": "<p>Explain how you could use the <em>fft</em> command in MATLAB/Octave to compute approximations of the coefficients <em>c<sub>n</sub></em> in <span>part (a)</span>. Write down the commands you would use, and say for what values of <em>n</em> you would expect your approximations to be most accurate.</p>\n", 
    "statement_latex": "Explain how you could use the \\emph{fft} command in MATLAB/Octave to\ncompute approximations of the coefficients \\emph{c\\textsubscript{n}} in\n{part\n(a)}. Write down the commands you would use, and say for what values of\n\\emph{n} you would expect your approximations to be most accurate.", 
    "statement_raw": "Explain how you could use the ''fft'' command in MATLAB/Octave to compute approximations of the coefficients ''c&lt;sub>n&lt;/sub>'' in [[Science:Math_Exam_Resources/Courses/MATH307/December_2010/Question_06_(a)|part (a)]]. Write down the commands you would use, and say for what values of ''n'' you would expect your approximations to be most accurate.\n", 
    "term": "December", 
    "topics": [
        "MATLAB"
    ], 
    "url": "http://wiki.ubc.ca/Science:Math_Exam_Resources/Courses/MATH307/December_2010/Question_06_(e)", 
    "year": 2010
}