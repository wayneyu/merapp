# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET    /                                                controllers.Application.index

# Team member page (Static)
GET    /team                                            controllers.Application.team

# GET    /editor                                          controllers.Application.editor

GET    /questions                                       controllers.Application.questions
GET    /questions/search                                controllers.Application.search
GET    /questions/search/term/:course                   controllers.QuestionController.distinctTermsJSON(course: String)
GET    /questions/search/year/:course/:term             controllers.QuestionController.distinctYearsJSON(course: String, term: String)
GET    /questions/search/question/:course/:term_year    controllers.QuestionController.distinctQuestionsJSON(course: String, term_year: String)
GET    /questions/search/course/:year/:term             controllers.QuestionController.distinctCoursesJSON(year: Int, term: String)
GET    /questions/search/id/:id                         controllers.QuestionController.searchById(id: String)
GET    /questions/search/:keyString                     controllers.QuestionController.searchByKeywords(keyString: String)

GET    /numSols                                         controllers.QuestionController.getCount()
GET    /contributors                                    controllers.QuestionController.getContributors()

GET    /questions/:course/:term_year/:q                 controllers.QuestionController.question(course: String, term_year: String, q: String)
GET    /questions/:course/:term_year/:q/json            controllers.QuestionController.questionInJson(course: String, term_year: String, q: String)
GET    /questions/:course/:term_year/:q/edit            controllers.QuestionController.questionEdit(course: String, term_year: String, q: String)
POST   /questions/:course/:term_year/:q/edit            controllers.QuestionController.questionFindAndModify(course: String, term_year: String, q: String)
POST   /questions/:course/:term_year/:q/edit/addtopic/:topic    controllers.QuestionController.addTopic(course: String, term_year: String, q: String, topic: String)
POST   /questions/:course/:term_year/:q/edit/removetopic/:topic    controllers.QuestionController.removeTopic(course: String, term_year: String, q: String, topic: String)
POST   /questions/upload                                controllers.QuestionController.upload(url: String)

POST   /questions/submit                                controllers.QuestionController.questionSubmit()
POST   /questions/search/submit                         controllers.QuestionController.searchByKeywordsSubmit()

GET    /exams                                           controllers.Application.exams()
GET    /exams/:course                                   controllers.QuestionController.course(course: String)
GET    /exams/:course/:term_year                        controllers.QuestionController.exam(course: String, term_year: String)

GET    /topics                                          controllers.Application.topics()
GET    /topics/search                                   controllers.TopicController.topicsSearch(q: String)
GET    /topics/:topic                                   controllers.TopicController.topic(topic: String)

POST   /questions/:course/:term_year/:q/vote/:rating    controllers.QuestionController.vote(course: String, term_year: String, q: String, rating: Int)

# Map static resources from the /public folder to the /assets URL path
GET    /javascriptRoutes                                controllers.Application.javascriptRoutes
GET    /assets/*file                                    controllers.Assets.at(path="/public", file)

# SocialSecure routes
GET        /users                                       controllers.AuthController.users
GET        /users/modify/:user/:provider/:to            controllers.AuthController.modifyUserType(user: String, provider: String, to: String)
POST       /users/modify                                controllers.AuthController.modifyUserSubmit
GET        /auth/user                                   controllers.AuthController.userprofile
GET        /auth/link-result                            controllers.AuthController.linkResult
GET        /login                                       controllers.CustomLoginController.login
GET        /logout                                      controllers.CustomLoginController.logout
->         /auth                                        securesocial.Routes
